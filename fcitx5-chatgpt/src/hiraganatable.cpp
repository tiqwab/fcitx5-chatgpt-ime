#include "hiraganatable.h"

#include <map>
#include <string>

std::map<std::string, std::string> hiragana_table = {
        {"a", "あ"},
        {"i", "い"},
        {"u", "う"},
        {"wu", "う"},
        {"e", "え"},
        {"o", "お"},
        {"ka", "か"},
        {"ca", "か"},
        {"ki", "き"},
        {"ku", "く"},
        {"qu", "く"},
        {"cu", "く"},
        {"ke", "け"},
        {"ko", "こ"},
        {"co", "こ"},
        {"sa", "さ"},
        {"si", "し"},
        {"shi", "し"},
        {"ci", "し"},
        {"su", "す"},
        {"se", "せ"},
        {"ce", "せ"},
        {"so", "そ"},
        {"ta", "た"},
        {"ti", "ち"},
        {"chi", "ち"},
        {"tu", "つ"},
        {"tsu", "つ"},
        {"te", "て"},
        {"to", "と"},
        {"na", "な"},
        {"ni", "に"},
        {"nu", "ぬ"},
        {"ne", "ね"},
        {"no", "の"},
        {"ha", "は"},
        {"hi", "ひ"},
        {"hu", "ふ"},
        {"fu", "ふ"},
        {"he", "へ"},
        {"ho", "ほ"},
        {"ma", "ま"},
        {"mi", "み"},
        {"mu", "む"},
        {"me", "め"},
        {"mo", "も"},
        {"ya", "や"},
        {"yu", "ゆ"},
        {"yo", "よ"},
        {"ra", "ら"},
        {"ri", "り"},
        {"ru", "る"},
        {"re", "れ"},
        {"ro", "ろ"},
        {"wa", "わ"},
        {"wo", "を"},
        {"nn", "ん"},

        {"ga", "が"},
        {"gi", "ぎ"},
        {"gu", "ぐ"},
        {"ge", "げ"},
        {"go", "ご"},
        {"za", "ざ"},
        {"zi", "じ"},
        {"ji", "じ"},
        {"zu", "ず"},
        {"ze", "ぜ"},
        {"zo", "ぞ"},
        {"da", "だ"},
        {"di", "ぢ"},
        {"du", "づ"},
        {"de", "で"},
        {"do", "ど"},
        {"ba", "ば"},
        {"bi", "び"},
        {"bu", "ぶ"},
        {"be", "べ"},
        {"bo", "ぼ"},
        {"pa", "ぱ"},
        {"pi", "ぴ"},
        {"pu", "ぷ"},
        {"pe", "ぺ"},
        {"po", "ぽ"},

        {"kya", "きゃ"},
        {"kyu", "きゅ"},
        {"kyo", "きょ"},
        {"sha", "しゃ"},
        {"shu", "しゅ"},
        {"sho", "しょ"},
        {"sya", "しゃ"},
        {"syu", "しゅ"},
        {"syo", "しょ"},
        {"cha", "ちゃ"},
        {"chu", "ちゅ"},
        {"cho", "ちょ"},
        {"nya", "にゃ"},
        {"nyu", "にゅ"},
        {"nyo", "にょ"},
        {"hya", "ひゃ"},
        {"hyu", "ひゅ"},
        {"hyo", "ひょ"},
        {"mya", "みゃ"},
        {"myu", "みゅ"},
        {"myo", "みょ"},
        {"rya", "りゃ"},
        {"ryu", "りゅ"},
        {"ryo", "りょ"},
        {"gya", "ぎゃ"},
        {"gyu", "ぎゅ"},
        {"gyo", "ぎょ"},
        {"ja", "じゃ"},
        {"ju", "じゅ"},
        {"je", "じぇ"},
        {"jo", "じょ"},
        {"bya", "びゃ"},
        {"byu", "びゅ"},
        {"byo", "びょ"},
        {"pya", "ぴゃ"},
        {"pyu", "ぴゅ"},
        {"pyo", "ぴょ"},

        {"va", "ゔぁ"},
        {"vi", "ゔぃ"},
        {"vu", "ゔ"},
        {"ve", "ゔぇ"},
        {"vo", "ゔぉ"},
        {"fa", "ふぁ"},
        {"fi", "ふぃ"},
        {"fe", "ふぇ"},
        {"fo", "ふぉ"},
        {"la", "ぁ"},
        {"li", "ぃ"},
        {"lu", "ぅ"},
        {"le", "ぇ"},
        {"lo", "ぉ"},
        {"xa", "ぁ"},
        {"xi", "ぃ"},
        {"xu", "ぅ"},
        {"xe", "ぇ"},
        {"xo", "ぉ"},
        {"wi", "うぃ"},
        {"we", "うぇ"},
        {"qa", "くぁ"},
        {"qi", "くぃ"},
        {"qe", "くぇ"},
        {"qo", "くぉ"},

        {"qq", "っq"},
        {"vv", "っv"},
        {"ll", "っl"},
        {"xx", "っx"},
        {"kk", "っk"},
        {"gg", "っg"},
        {"ss", "っs"},
        {"zz", "っz"},
        {"jj", "っj"},
        {"tt", "っt"},
        {"dd", "っd"},
        {"hh", "っh"},
        {"ff", "っf"},
        {"bb", "っb"},
        {"pp", "っp"},
        {"mm", "っm"},
        {"yy", "っy"},
        {"rr", "っr"},
        {"ww", "っw"},
        {"cc", "っc"},

        {",", "、"},
        {".", "。"},
        {"-", "ー"},
        {"~", "〜"},
        {"[", "「"},
        {"]", "」"},
};

std::string convert_to_hiragana(const std::string& input) {
    for (int i = std::min((int) input.length(), 3); i > 0; i--) {
        auto suffix = input.substr(input.length() - i);
        auto it = hiragana_table.find(suffix);
        if (it != hiragana_table.end()) {
            auto res = input.substr(0, input.length() - i);
            return res + it->second;
        }
    }
    return "";
}
